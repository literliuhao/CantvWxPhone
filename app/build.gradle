import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

ext.SIGN_CONFIG_FILE = ['sign_app.properties'] // 签名配置文件
apply from: 'sign.gradle' // 自动签名配置，勿删

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.cantv.wechatphoto"
        minSdkVersion 19
        targetSdkVersion 21
        versionCode 106
        versionName "v1.0.6"
    }

    buildTypes {
        update {
            initWith(release)
        }
        release {
            // 开启混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'update') {
                    def newVersionCode = variant.versionCode + 1
                    variant.mergedFlavor.versionCode = newVersionCode
                    def versionCodeStr = formatVersionCodeString(newVersionCode)
                    def newVersionName = variant.versionName.replaceAll('^\\d(\\.\\d)*', "${versionCodeStr}")
                    variant.mergedFlavor.versionName = newVersionName
                }
                //修改生成的apk名字
                variant.outputs.each { output ->
                    def oldFile = output.outputFile
                    if (variant.buildType.name in ['release', 'update']) {
                        def releaseApkName = "Market_${variant.flavorName}_V${variant.versionCode}_${getDateTime()}.apk";
                        if (project.hasProperty("appReleaseDir")) {
                            File releasePath = new File(project.property("appReleaseDir"), getDate());
                            output.outputFile = new File(releasePath, releaseApkName);
                        } else {
                            output.outputFile = new File(oldFile.parent, releaseApkName)
                        }
                    }
                }
            }
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
}

def releaseDate() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}
def releaseTime(){
    return new SimpleDateFormat("yyyyMMddHHmm").format(new Date())
}
def getDateTime() {
    return formatDateTime('yyyyMMddHHmmss')
}
def getDate() {
    return formatDateTime('yyyyMMdd');
}
def formatDateTime(String format) {
    return new Date().format(format)
}
def formatVersionCodeString(int versionCode) {
    versionCode.toString().toCharArray().join('.').toString()
}